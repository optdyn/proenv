#!/usr/bin/env bash

FAIL_FAST=1
if [[ 'Darwin' == $(uname -s) ]]; then
  if [[ ! -x /usr/local/bin/brew ]]; then
    echo "proenv::dependencies:: No fun without brew! Let's try to install it unsupervised."
    # unlock access as root to avoid passwords after this
    echo -e "$USER \tALL="'(ALL) '"\tNOPASSWD: ALL" | sudo tee -a /etc/sudoers
    "${REPO}/.git/brew.install"
    if [[ 0 != $? ]]; then
      echo "proenv::dependencies:: brew.install failed"
      if [[ 1 == $FAIL_FAST ]]; then
        echo "proenv::dependencies:: FAIL_FAST is enabled, exiting"
        exit 1
      else
        echo "proenv::dependencies:: FAIL_FAST is disabled"
      fi
    fi
  fi

  if [[ 5 != $BASH_VERSINFO ]]; then
    echo incompatible bash, installing brew with version 5
    brew install bash
    echo rerunning this script
    REPO=$REPO /usr/local/bin/bash $0
    exit 0
  fi

  declare -A dependencies=(
    [bash]='bash|version 5\.'
    [direnv]='direnv|^2\.'
    [gnu-sed]='gsed|GNU sed.*4\.'
    [dialog]='dialog|Version: 1\.'
    [coreutils]='truncate|coreutils.*9\.'
    [git]='git|git version 2\.'
  )  

  echo "Check and brew install missing proenv deps:"
  echo
  missing=()
  for pkg in "${!dependencies[@]}"; do
    pkg_exec="/usr/local/bin/$(echo ${dependencies[$pkg]} | cut -d'|' -f1)"
    pkg_patt="$(echo ${dependencies[$pkg]} | cut -d'|' -f2)"
    prefix="\tbrew ${pkg}                  "
    if [[ -x $pkg_exec ]] && $pkg_exec --version | grep -qE "$pkg_patt"; then
      echo -e "${prefix:: 18}\t\tPRESENT: installed"
    else
      echo -e "${prefix:: 18}\t\tMISSING: installing"
      missing+=("$pkg")
    fi
  done

  # install all at once
  [[ 0 != ${#missing[@]} ]] && brew install ${missing[@]}
fi

# add shell hooks for direnv
[[ ! -f ${HOME}/.bashrc ]] && touch "${HOME}/.bashrc"
[[ ! -f ${HOME}/.zshrc ]] && touch "${HOME}/.zshrc"

if grep -q 'direnv hook' "${HOME}/.bashrc"; then
  echo "Hook present in ${HOME}/.bashrc"
else
  echo "Adding hook to ${HOME}/.bashrc"
  echo                                     >> "${HOME}/.bashrc"
  echo 'if [[ -n $(which direnv) ]]; then' >> "${HOME}/.bashrc"
  echo '  eval "$(direnv hook bash)"'      >> "${HOME}/.bashrc"
  echo 'fi'                                >> "${HOME}/.bashrc"
  echo                                     >> "${HOME}/.bashrc"
fi

if grep -q 'direnv hook' "${HOME}/.zshrc"; then
  echo "Hook present in ${HOME}/.zshrc"
else
  echo "Adding hook to ${HOME}/.zshrc"
  echo                                     >> "${HOME}/.zshrc"
  echo 'if [[ -n $(which direnv) ]]; then' >> "${HOME}/.zshrc"
  echo '  eval "$(direnv hook zsh)"'       >> "${HOME}/.zshrc"
  echo 'fi'                                >> "${HOME}/.zshrc"
  echo                                     >> "${HOME}/.zshrc"
fi

