#!/usr/bin/env bash

# Installs proenv creating ${REPO}/.proenv structures
# Invoked by hooks/post-checkout
# After .githooks created, before hooks (registered) link setup

if [[ -z $REPO ]]; then
  REPO="$(git rev-parse --show-toplevel)"
  export REPO
  echo "proenv:: defining REPO=${REPO}"
else
  echo "proenv:: alreaded defined REPO=${REPO}"
fi

mkdir -p "${REPO}/.proenv"
cp -f "${REPO}/.git/proenv.head" "${REPO}/.proenv/HEAD"
[[ 0 == $? ]] && rm -rf "${REPO}/.git/proenv.head"

# move cloned template assets from .git to .proenv
cp -rf "${REPO}/.git/etc" "${REPO}/.proenv/etc"
[[ 0 == $? ]] && rm -rf "${REPO}/.git/etc"

cp -rf "${REPO}/.git/modules" "${REPO}/.proenv/modules"
[[ 0 == $? ]] && rm -rf "${REPO}/.git/modules"

cp -rf "${REPO}/.git/bin" "${REPO}/.proenv/bin"
[[ 0 == $? ]] && rm -rf "${REPO}/.git/bin"

# create .envrc
cat <<EOF > "${REPO}/.envrc"
REPO="${REPO}"
export REPO

PATH="\${REPO}/.proenv/bin:\$PATH"
export PATH

if [[ -f "\${REPO}/.proenv/etc/direnv" ]]; then
  source "\${REPO}/.proenv/etc/direnv"
fi

EOF

if [[ -f ${REPO}/.gitignore ]]; then
  if [[ -z $(grep '.envrc' "${REPO}/.gitignore") ]]; then
    echo '.envrc' >> "${REPO}/.gitignore"
    GITIGNORE_CHANGED=1
  fi
  if [[ -z $(grep '.proenv' "${REPO}/.gitignore") ]]; then
    echo '.proenv' >> "${REPO}/.gitignore"
    GITIGNORE_CHANGED=1
  fi
else
  echo '.envrc' >> "${REPO}/.gitignore"
  echo '.proenv' >> "${REPO}/.gitignore"
  GITIGNORE_CHANGED=1
fi

if [[ 1 == $GITIGNORE_CHANGED ]]; then
  git add "${REPO}/.gitignore"
  git commit -m 'proenv install adding .envrc and .proenv to .gitignore' \
    "${REPO}/.gitignore"
  git push
fi

# execute dependencies and direnv register repository's .envrc
source $(dirname $0)/dependencies
direnv allow "${REPO}"

# cleanup .git directory from template assets
rm -f "${REPO}/.git/Readme.md"
rm -f "${REPO}/.git/dependencies"
rm -f "${REPO}/.git/install"
rm -rf "${REPO}/.git/share"

